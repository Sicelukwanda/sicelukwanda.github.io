{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Import CSS file if using CSS for styling\nimport './App.css';\n\n// App component\nfunction App() {\n  _s();\n  // State to hold projects data\n  const [projects, setProjects] = useState([]);\n\n  // Fetch projects data from a JSON file or an API on component mount\n  useEffect(() => {\n    // Replace 'path/to/projects.json' with the actual path or API endpoint\n    fetch('path/to/projects.json').then(response => response.json()).then(data => setProjects(data)).catch(error => console.error('Error fetching projects:', error));\n  }, []); // Empty dependency array means this effect runs once after the initial render\n  // Function to dynamically load projects\n  function loadProjects() {\n    fetch('data/projects.json').then(response => response.json()).then(projects => {\n      const container = document.getElementById('projects-container');\n      projects.forEach(project => {\n        const projectElement = document.createElement('div');\n        projectElement.innerHTML = `\n                    <h3>${project.title}</h3>\n                    <p>${project.description}</p>\n                    <img src=\"${project.imageURL}\" alt=\"${project.title}\" />\n                    <a href=\"${project.projectURL}\" target=\"_blank\">View Project</a>\n                `;\n        container.appendChild(projectElement);\n      });\n    }).catch(error => console.error('Error loading project data:', error));\n  }\n\n  // Function to dynamically load publications\n  function loadPublications() {\n    fetch('data/publications.json').then(response => response.json()).then(publications => {\n      const container = document.getElementById('publications-container');\n      publications.forEach(publication => {\n        const publicationElement = document.createElement('div');\n        publicationElement.innerHTML = `\n                    <h3>${publication.title}</h3>\n                    <p>${publication.description}</p>\n                    <img src=\"${publication.imageURL}\" alt=\"${publication.title}\" />\n                    <a href=\"${publication.publicationURL}\" target=\"_blank\">View Publication</a>\n                `;\n        container.appendChild(publicationElement);\n      });\n    }).catch(error => console.error('Error loading publication data:', error));\n  }\n\n  // Load projects and publications on window load\n  window.onload = function () {\n    loadProjects();\n    loadPublications();\n  };\n  // // Render the app\n  // return (\n  //   <div className=\"App\">\n  //     <header>\n  //       <h1>My Projects</h1>\n  //     </header>\n  //     <main>\n  //       {/* Dynamically render project entries */}\n  //       <div className=\"projects-container\">\n  //         {projects.map((project) => (\n  //           <div key={project.id} className=\"project\">\n  //             <h2>{project.title}</h2>\n  //             <p>{project.description}</p>\n  //             <img src={project.imageURL} alt={project.title} />\n  //             <a href={project.projectURL} target=\"_blank\" rel=\"noopener noreferrer\">View Project</a>\n  //           </div>\n  //         ))}\n  //       </div>\n  //     </main>\n  //   </div>\n  // );\n}\n_s(App, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","_s","projects","setProjects","fetch","then","response","json","data","catch","error","console","loadProjects","container","document","getElementById","forEach","project","projectElement","createElement","innerHTML","title","description","imageURL","projectURL","appendChild","loadPublications","publications","publication","publicationElement","publicationURL","window","onload","_c","$RefreshReg$"],"sources":["C:/Users/Luke/dennisushi-remake/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Import CSS file if using CSS for styling\nimport './App.css';\n\n// App component\nfunction App() {\n  // State to hold projects data\n  const [projects, setProjects] = useState([]);\n\n  // Fetch projects data from a JSON file or an API on component mount\n  useEffect(() => {\n    // Replace 'path/to/projects.json' with the actual path or API endpoint\n    fetch('path/to/projects.json')\n      .then((response) => response.json())\n      .then((data) => setProjects(data))\n      .catch((error) => console.error('Error fetching projects:', error));\n  }, []); // Empty dependency array means this effect runs once after the initial render\n  // Function to dynamically load projects\n  function loadProjects() {\n    fetch('data/projects.json')\n        .then(response => response.json())\n        .then(projects => {\n            const container = document.getElementById('projects-container');\n            projects.forEach(project => {\n                const projectElement = document.createElement('div');\n                projectElement.innerHTML = `\n                    <h3>${project.title}</h3>\n                    <p>${project.description}</p>\n                    <img src=\"${project.imageURL}\" alt=\"${project.title}\" />\n                    <a href=\"${project.projectURL}\" target=\"_blank\">View Project</a>\n                `;\n                container.appendChild(projectElement);\n            });\n        })\n        .catch(error => console.error('Error loading project data:', error));\n  }\n\n  // Function to dynamically load publications\n  function loadPublications() {\n    fetch('data/publications.json')\n        .then(response => response.json())\n        .then(publications => {\n            const container = document.getElementById('publications-container');\n            publications.forEach(publication => {\n                const publicationElement = document.createElement('div');\n                publicationElement.innerHTML = `\n                    <h3>${publication.title}</h3>\n                    <p>${publication.description}</p>\n                    <img src=\"${publication.imageURL}\" alt=\"${publication.title}\" />\n                    <a href=\"${publication.publicationURL}\" target=\"_blank\">View Publication</a>\n                `;\n                container.appendChild(publicationElement);\n            });\n        })\n        .catch(error => console.error('Error loading publication data:', error));\n  }\n\n  // Load projects and publications on window load\n  window.onload = function() {\n    loadProjects();\n    loadPublications();\n  };\n  // // Render the app\n  // return (\n  //   <div className=\"App\">\n  //     <header>\n  //       <h1>My Projects</h1>\n  //     </header>\n  //     <main>\n  //       {/* Dynamically render project entries */}\n  //       <div className=\"projects-container\">\n  //         {projects.map((project) => (\n  //           <div key={project.id} className=\"project\">\n  //             <h2>{project.title}</h2>\n  //             <p>{project.description}</p>\n  //             <img src={project.imageURL} alt={project.title} />\n  //             <a href={project.projectURL} target=\"_blank\" rel=\"noopener noreferrer\">View Project</a>\n  //           </div>\n  //         ))}\n  //       </div>\n  //     </main>\n  //   </div>\n  // );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}