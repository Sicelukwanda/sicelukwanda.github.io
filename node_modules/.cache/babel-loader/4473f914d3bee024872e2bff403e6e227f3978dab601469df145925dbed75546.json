{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luke\\\\dennisushi-remake\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Import CSS file if using CSS for styling\nimport './App.css';\n\n// App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to hold projects data\n  const [projects, setProjects] = useState([]);\n\n  // Fetch projects data from a JSON file or an API on component mount\n  useEffect(() => {\n    // Replace 'path/to/projects.json' with the actual path or API endpoint\n    fetch('path/to/projects.json').then(response => response.json()).then(data => setProjects(data)).catch(error => console.error('Error fetching projects:', error));\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  // Render the app\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-container\",\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.imageURL,\n            alt: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.projectURL,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","projects","setProjects","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","title","description","src","imageURL","alt","href","projectURL","target","rel","id","_c","$RefreshReg$"],"sources":["C:/Users/Luke/dennisushi-remake/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Import CSS file if using CSS for styling\nimport './App.css';\n\n// App component\nfunction App() {\n  // State to hold projects data\n  const [projects, setProjects] = useState([]);\n\n  // Fetch projects data from a JSON file or an API on component mount\n  useEffect(() => {\n    // Replace 'path/to/projects.json' with the actual path or API endpoint\n    fetch('path/to/projects.json')\n      .then((response) => response.json())\n      .then((data) => setProjects(data))\n      .catch((error) => console.error('Error fetching projects:', error));\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  // Render the app\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Projects</h1>\n      </header>\n      <main>\n        {/* Dynamically render project entries */}\n        <div className=\"projects-container\">\n          {projects.map((project) => (\n            <div key={project.id} className=\"project\">\n              <h2>{project.title}</h2>\n              <p>{project.description}</p>\n              <img src={project.imageURL} alt={project.title} />\n              <a href={project.projectURL} target=\"_blank\" rel=\"noopener noreferrer\">View Project</a>\n            </div>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,uBAAuB,CAAC,CAC3BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAAc,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACTlB,OAAA;MAAAc,QAAA,eAEEd,OAAA;QAAKa,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCX,QAAQ,CAACgB,GAAG,CAAEC,OAAO,iBACpBpB,OAAA;UAAsBa,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACvCd,OAAA;YAAAc,QAAA,EAAKM,OAAO,CAACC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBlB,OAAA;YAAAc,QAAA,EAAIM,OAAO,CAACE;UAAW;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BlB,OAAA;YAAKuB,GAAG,EAAEH,OAAO,CAACI,QAAS;YAACC,GAAG,EAAEL,OAAO,CAACC;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClDlB,OAAA;YAAG0B,IAAI,EAAEN,OAAO,CAACO,UAAW;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAf,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAJ/EE,OAAO,CAACU,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChB,EAAA,CAlCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}